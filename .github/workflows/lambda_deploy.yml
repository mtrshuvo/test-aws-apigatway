name: Auto Lambda Deploy

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy-lambdas:
    runs-on: ubuntu-latest

    env:
      REGION: ap-southeast-1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Environment
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/staging" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
          fi
          echo "Environment set to $ENV"

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Determine Changed Lambdas
        id: changed
        run: |
          # List folders in repo root (assuming each lambda is in its own folder)
          ALL_LAMBDAS=$(jq -r '.lambdas | keys[]' .github/config/lambdas.json)
          
          # Get changed folders from last commit
          CHANGED_FOLDERS=$(git diff --name-only ${{ github.sha }}^ ${{ github.sha }} | grep '/$' | cut -d'/' -f1 | sort -u)

          # Filter only folders that match lambdas
          SELECTED=()
          for folder in $CHANGED_FOLDERS; do
            for lambda in $ALL_LAMBDAS; do
              if [[ "$folder" == "$lambda" ]]; then
                SELECTED+=("$lambda")
              fi
            done
          done

          if [[ ${#SELECTED[@]} -eq 0 ]]; then
            echo "No lambdas changed, exiting..."
            echo "changed_lambdas=" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Changed Lambdas: ${SELECTED[@]}"
          echo "changed_lambdas=${SELECTED[*]}" >> $GITHUB_OUTPUT

      - name: Deploy Changed Lambdas
        if: steps.changed.outputs.changed_lambdas != ''
        run: |
          for lambda in ${{ steps.changed.outputs.changed_lambdas }}; do
            echo "Deploying Lambda: $lambda"
            bash .github/scripts/deploy_lambdas.sh select "$lambda"
          done
