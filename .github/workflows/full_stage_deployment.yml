name: Full Stage Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target stage to deploy"
        required: true
        type: choice
        options:
          - staging
          - prod

jobs:
  deploy-stage:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      REST_API_ID: 1u8zyys7vb
      REGION: ap-southeast-1
      ENV: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.REGION }}

# ==============================
# Usage:
#   ./deploy.sh auto it will check if there is any change in the lambda code, if yes, it will deploy the lambdas
#   ./deploy.sh force it will deploy all the lambdas regardless of any change
#   ./deploy.sh select get_google_sign_in_url [other_lambda_names] it will deploy only the selected lambdas 
# ==============================
      - name: Deploy Lambdas
        env:
          ALLOWED_ORIGINS: ${{ vars.ALLOWED_ORIGINS }}
          COGNITO_CLIENT_ID: ${{ vars.COGNITO_CLIENT_ID }}
          COGNITO_DOMAIN: ${{ vars.COGNITO_DOMAIN }}
          COGNITO_REDIRECT_URI: ${{ vars.COGNITO_REDIRECT_URI }}
          BOOK_KEY: ${{ vars.BOOK_KEY }}
          EBOOK_BUCKET: ${{ vars.EBOOK_BUCKET }}
          ORIGIN: ${{ vars.ORIGIN }}
          USER_POOL_ID: ${{ vars.USER_POOL_ID }}
          OPTIONS_CORS_DOMAIN: ${{ vars.OPTIONS_CORS_DOMAIN }}
        run: |
          bash .github/scripts/deploy_lambdas.sh select get_google_sign_in_url

      - name: Update API Gateway routes
        env:
          ENV: ${{ github.event.inputs.environment }}
          REST_API_ID: 1u8zyys7vb
          REGION: ap-southeast-1
          OPTIONS_CORS_DOMAIN: ${{ vars.OPTIONS_CORS_DOMAIN }}
        run: |
          bash .github/scripts/update_routes.sh
